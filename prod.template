server {

    listen 80;
    server_name ${NGINX_HOST};

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name ${NGINX_HOST};
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Static folder that Nginx must serve
    location / {
        try_files $uri $uri/ /index.html;
        root /home/html;
        auth_basic off;

        add_header             X-Cache-Status $upstream_cache_status;

        proxy_pass             https://martinheinz.dev;
        proxy_set_header       Host $host;
        proxy_buffering        on;
        proxy_cache            STATIC;
        proxy_cache_valid      any  48h;
        proxy_cache_use_stale  error timeout invalid_header updating
                               http_500 http_502 http_503 http_504;

        proxy_ignore_headers   X-Accel-Expires Expires Cache-Control;
        proxy_ignore_headers   "Set-Cookie";
        proxy_hide_header      "Set-Cookie";
    }

    location ~* \.(?:cur|jpe?g|gif|htc|ico|png|otf|ttf|eot|woff|woff2|svg)$ {
        root /home/html;
        access_log    off;
        add_header    Cache-Control public;
        expires       max;

        tcp_nodelay off;
    }

    location ~* \.(?:css|js|html)$ {
        root /home/html;
        access_log    off;
        add_header    Cache-Control public;
        expires       2h;

        tcp_nodelay off;
    }


    # In order to avoid favicon errors on some navigators like IE
    # which would pollute Nginx logs (do use the "=")
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location ~ ^/(api|editor) {
        auth_basic "Administratorâ€™s Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location /rss {
        index rss.xml;
        alias /home;
    }

    location /newsletter {
        index newsletter.xml;
        alias /home;
    }

    location /sitemap {
        index sitemap.xml;
        alias /home;
    }

    # robots.txt file generated on the fly
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: \n\nUser-agent: *\nDisallow: /api/v1/";
    }
}
